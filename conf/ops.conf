Program --> program_head program_body .
program_head --> program id ( identifier_list ) ;
identifier_list --> identifier_list , id | id
program_body --> declarations
		subprogram_declarations
		compound_statement
declarations --> VAR declaration ; | &
declaration --> declaration ; identifier_list : type
		| identifier_list : type
type --> standard_type
		| array [ digits .. digits ] of standard_type
		| record declaretion end
standard_type --> integer
		| real
		| Boolean
		| num .. num
subprogram_declarations --> 
		subprogram_declarations subprogram_declaration ;
		| &
subprogram_declaration --> subprogram_head
		declarations
		compound_statement
subprogram_head --> 
		function id arguments : standard_type ;
		| procedure id arguments ;
arguments--> ( parameter_lists ) | &
parameter_lists--> parameter_lists ; parameter_list
		| parameter_list
parameter_list--> VAR identifier_list : type
		| identifier_list : type
compound_statement--> begin
		optional_statements
		end
optional_statements--> statement_list | &
statement_list--> statement_list ; statement
		| statement
statement --> variable assignop expression
		| procedure_call_statement
		| compound_statement
		| if expression then statement else statement
		| while expression do statement
		| read ( identifier_list )
		| write ( expr_list )
variable--> id | id [ expression ]
procedure_call_statement--> id
		| id ( expr_list )
expr_list--> expr_list , expression | expression
expression--> simple_expr relop simple_expr
		| simple_expr
simple_expr --> simple_expr addop term
		| term
		| sign term
term--> term mulop factor | factor
factor --> id
		| id ( expr_list )
		| id [expression]
		| num
		| ( expression )
		| not factor
		| true
		| false
sign--> + | -



注： & 代表 ‘空’