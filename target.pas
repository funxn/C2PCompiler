68 program 68 0
35 id 0 0
43 ( 15 0
35 id 1 0
47 , 19 0
35 id 2 0
44 ) 16 0
46 ; 18 0
65 var 65 1
35 id 3 1
47 , 19 1
35 id 4 1
45 : 17 1
50 integer 50 1
46 ; 18 1
66 function 66 2
35 id 5 2
43 ( 15 2
35 id 6 2
47 , 19 2
35 id 7 2
45 : 17 2
50 integer 50 2
44 ) 16 2
45 : 17 2
50 integer 50 2
46 ; 18 2
56 begin 56 3
53 if 53 4
35 id 7 4
42 relop 9 4
36 digits 0 4
54 then 54 4
35 id 5 4
41 assignop 8 4
35 id 6 4
55 else 55 5
35 id 5 5
41 assignop 8 5
35 id 5 5
43 ( 15 5
35 id 7 5
47 , 19 5
35 id 6 5
40 mulop 7 5
35 id 7 5
44 ) 16 5
57 end 57 6
46 ; 18 6
66 function 66 7
35 id 8 7
43 ( 15 7
35 id 6 7
47 , 19 7
35 id 7 7
45 : 17 7
50 integer 50 7
44 ) 16 7
45 : 17 7
50 integer 50 7
46 ; 18 7
56 begin 56 8
35 id 7 9
41 assignop 8 9
35 id 7 9
39 addop 2 9
35 id 6 9
57 end 57 10
46 ; 18 10
56 begin 56 11
60 read 60 12
43 ( 15 12
35 id 3 12
47 , 19 12
35 id 4 12
44 ) 16 12
46 ; 18 12
61 write 61 13
43 ( 15 13
35 id 5 13
43 ( 15 13
35 id 3 13
47 , 19 13
35 id 4 13
44 ) 16 13
44 ) 16 13
57 end 57 14
72 . 49 14
